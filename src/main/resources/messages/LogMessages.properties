# Comments indicate the order in which parameters will be passed in. Process assertions relies on SLF4J's message formatting, 
# which means parameters are always substituted in the same order, so the message must contain {} placeholders for the parameters
# in the designated order.

#processInstanceId
process.1=Asserting process instance with id '{}' is active

#processInstanceId
process.2=Asserting process instance with id '{}' can be found

#processInstanceId
process.3=Asserting historic process instance with id '{}' can be found and is not ended

#processInstanceId
process.4=Asserting historic process instance with id '{}' can be found and is ended

#processInstanceId
process.5=Asserting process instance with id '{}' is ended

#processInstanceId
process.6=Asserting there is no running process instance with id '{}'

#processInstanceId
process.7=Asserting process instance with id '{}' is not ended

#processInstanceId
process.8=Asserting process instance with id '{}' is not suspended

#taskDefinitionKey, processInstanceId
task.1=Asserting a task instance is uncompleted with taskDefinitionKey '{}' in process instance with id '{}'

#taskInstanceId
task.2=Asserting task instance with id '{}' is uncompleted

#failureMessage
error.assertions.1=Failing process assertions: {}

#processInstanceId
error.process.1=The process instance with id '{}' is not active

#processInstanceId
error.process.2=The process instance with id '{}' is not ended

#taskDefinitionKey, processInstanceId
error.task.1=There is no task instance with definition key '{}' pending completion in process instance with id '{}'

#taskInstanceId
error.task.2=The task instance with id '{}' is not pending completion
